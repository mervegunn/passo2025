version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sports_ecommerce_db
    environment:
      POSTGRES_DB: SportsEcommerceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_fresh:/var/lib/postgresql/data
    networks:
      - sports_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ASP.NET Core API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sports_ecommerce_api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=SportsEcommerceDB;Username=postgres;Password=postgres123;Trust Server Certificate=true
      - Jwt__Key=YourSuperSecretKeyHere123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
      - Jwt__Issuer=SportsEcommerceAPI
      - Jwt__Audience=SportsEcommerceClient
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sports_network
    restart: unless-stopped

volumes:
  postgres_data_fresh:

networks:
  sports_network:
    driver: bridge
